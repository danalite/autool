"use strict";(self.webpackChunk_eightshift_docs=self.webpackChunk_eightshift_docs||[]).push([[9441],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return k}});var l=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,l)}return o}function n(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,l,r=function(e,t){if(null==e)return{};var o,l,r={},i=Object.keys(e);for(l=0;l<i.length;l++)o=i[l],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)o=i[l],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var a=l.createContext({}),c=function(e){var t=l.useContext(a),o=t;return e&&(o="function"==typeof e?e(t):n(n({},t),e)),o},p=function(e){var t=c(e.components);return l.createElement(a.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(o),h=r,k=u["".concat(a,".").concat(h)]||u[h]||d[h]||i;return o?l.createElement(k,n(n({ref:t},p),{},{components:o})):l.createElement(k,n({ref:t},p))}));function k(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,n=new Array(i);n[0]=h;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[u]="string"==typeof e?e:r,n[1]=s;for(var c=2;c<i;c++)n[c]=o[c];return l.createElement.apply(null,n)}return l.createElement.apply(null,o)}h.displayName="MDXCreateElement"},8490:function(e,t,o){o.r(t),o.d(t,{assets:function(){return p},contentTitle:function(){return a},default:function(){return k},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var l=o(7462),r=o(3366),i=(o(7294),o(3905)),n=["components"],s={id:"helpers-javascript",title:"YOLO object detection"},a=void 0,c={unversionedId:"basics/helpers-javascript",id:"basics/helpers-javascript",title:"YOLO object detection",description:"docs-source",source:"@site/docs/basics/helpers-javascript.md",sourceDirName:"basics",slug:"/basics/helpers-javascript",permalink:"/autool/docs/basics/helpers-javascript",draft:!1,tags:[],version:"current",frontMatter:{id:"helpers-javascript",title:"YOLO object detection"},sidebar:"docs",previous:{title:"Format converter",permalink:"/autool/docs/basics/service-ffmpeg"},next:{title:"Stable Diffusion",permalink:"/autool/docs/basics/helpers-scss"}},p={},u=[{value:"icons",id:"icons",level:3},{value:"illustrations",id:"illustrations",level:3},{value:"blockIcons",id:"blockicons",level:3},{value:"getActions",id:"getactions",level:3},{value:"getOption",id:"getoption",level:3},{value:"getOptionColors",id:"getoptioncolors",level:3},{value:"getOptions",id:"getoptions",level:3},{value:"getPaletteColors",id:"getpalettecolors",level:3},{value:"inserter",id:"inserter",level:3},{value:"outputCssVariablesGlobal",id:"outputcssvariablesglobal",level:3},{value:"outputCssVariables",id:"outputcssvariables",level:3},{value:"getUnique",id:"getunique",level:3},{value:"overrideInnerBlockAttributes",id:"overrideinnerblockattributes",level:3},{value:"overrideInnerBlockSimpleWrapperAttributes",id:"overrideinnerblocksimplewrapperattributes",level:3},{value:"pasteInto",id:"pasteinto",level:3},{value:"props",id:"props",level:3},{value:"getAttributes",id:"getattributes",level:3},{value:"getExample",id:"getexample",level:3},{value:"registerBlocks",id:"registerblocks",level:3},{value:"registerVariations",id:"registervariations",level:3},{value:"ucfirst",id:"ucfirst",level:3},{value:"camelize",id:"camelize",level:3},{value:"checkAttr",id:"checkattr",level:3},{value:"checkAttrResponsive",id:"checkattrresponsive",level:3},{value:"cookies",id:"cookies",level:3},{value:"debounce",id:"debounce",level:3},{value:"devices",id:"devices",level:3},{value:"dynamicImport",id:"dynamicimport",level:3},{value:"elementChildrenHeight",id:"elementchildrenheight",level:3},{value:"escape-string",id:"escape-string",level:3},{value:"navigator",id:"navigator",level:3},{value:"responsiveSelectors",id:"responsiveselectors",level:3},{value:"selector",id:"selector",level:3},{value:"truncateMiddle",id:"truncatemiddle",level:3},{value:"yoastSeo",id:"yoastseo",level:3},{value:"blockDetails",id:"blockdetails",level:3},{value:"Gutenberg",id:"gutenberg",level:3},{value:"storybookDefaultMocksCategories",id:"storybookdefaultmockscategories",level:3},{value:"storybookDefaultMocksColorPalette",id:"storybookdefaultmockscolorpalette",level:3},{value:"storybookWindowObjects,",id:"storybookwindowobjects",level:3},{value:"storybookWpStyles",id:"storybookwpstyles",level:3}],d={toc:u},h="wrapper";function k(e){var t=e.components,o=(0,r.Z)(e,n);return(0,i.kt)(h,(0,l.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/blocks/init/src/Blocks/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/source-eightshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a",alt:"docs-source"}))),(0,i.kt)("p",null,"All JavaScript helpers can be imported from the ",(0,i.kt)("inlineCode",{parentName:"p"},"@eightshift/frontend-libs/scripts")," folder, so you don't need to think about the internal folder structure of Eightshift Frontend Libs. If you want multiple functions imported just concatenate them in the import like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import {\n    camelize,\n    checkAttr,\n    props,\n    ...\n} from '@eightshift/frontend-libs/scripts';\n")),(0,i.kt)("h1",{id:"editor-helpers"},(0,i.kt)("a",{parentName:"h1",href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/editor"},"Editor helpers")),(0,i.kt)("p",null,"All of these helpers are generally only used in the Block Editor."),(0,i.kt)("h3",{id:"icons"},"icons"),(0,i.kt)("p",null,"All UI icons."),(0,i.kt)("h3",{id:"illustrations"},"illustrations"),(0,i.kt)("p",null,"Illustrations for helper modals."),(0,i.kt)("h3",{id:"blockicons"},"blockIcons"),(0,i.kt)("p",null,"Block icons, primarily used in block manifests."),(0,i.kt)("h3",{id:"getactions"},"getActions"),(0,i.kt)("p",null,"Create attributes actions from blocks manifest.json.\nThis helper is deprecated and should not be used anymore."),(0,i.kt)("h3",{id:"getoption"},"getOption"),(0,i.kt)("p",null,"Provides ability to override component options from the parent block/component."),(0,i.kt)("h3",{id:"getoptioncolors"},"getOptionColors"),(0,i.kt)("p",null,"Use this hook to filter the global colors out of the component or block manifest.\nThis function is deprecated and getOption should be used."),(0,i.kt)("h3",{id:"getoptions"},"getOptions"),(0,i.kt)("p",null,"Combines two objects of options, one from current component and the other from the parent component."),(0,i.kt)("h3",{id:"getpalettecolors"},"getPaletteColors"),(0,i.kt)("p",null,"Use this hook to read editor-color-palette colors directly from WP built in store."),(0,i.kt)("h3",{id:"inserter"},"inserter"),(0,i.kt)("p",null,"Development inserter made to insert one or multiple blocks in the dom using console."),(0,i.kt)("h3",{id:"outputcssvariablesglobal"},"outputCssVariablesGlobal"),(0,i.kt)("p",null,"Get Global manifest.json and return global variables as CSS variables."),(0,i.kt)("h3",{id:"outputcssvariables"},"outputCssVariables"),(0,i.kt)("p",null,"Get component/block options and process them in CSS variables."),(0,i.kt)("h3",{id:"getunique"},"getUnique"),(0,i.kt)("p",null,"Returns a unique ID generally used for css variables."),(0,i.kt)("h3",{id:"overrideinnerblockattributes"},"overrideInnerBlockAttributes"),(0,i.kt)("p",null,"Used to set attributes on all innerBlocks. This value will be stored in the block editor store and set to a block."),(0,i.kt)("h3",{id:"overrideinnerblocksimplewrapperattributes"},"overrideInnerBlockSimpleWrapperAttributes"),(0,i.kt)("p",null,"Used to set attributes on all innerBlocks preset only for simple wrapper setup. This value will be stored in the block editor store and set to a block."),(0,i.kt)("h3",{id:"pasteinto"},"pasteInto"),(0,i.kt)("p",null,"Paste event handler."),(0,i.kt)("h3",{id:"props"},"props"),(0,i.kt)("p",null,"Output only attributes that are used in the component and remove everything else."),(0,i.kt)("h3",{id:"getattributes"},"getAttributes"),(0,i.kt)("p",null,'Get Block attributes combined in one: "shared, global, wrapper, components, block".'),(0,i.kt)("h3",{id:"getexample"},"getExample"),(0,i.kt)("p",null,'Get Block example attributes combined in one: "components and block".'),(0,i.kt)("h3",{id:"registerblocks"},"registerBlocks"),(0,i.kt)("p",null,"Register all Block Editor blocks using WP ",(0,i.kt)("inlineCode",{parentName:"p"},"registerBlockType")," method."),(0,i.kt)("h3",{id:"registervariations"},"registerVariations"),(0,i.kt)("p",null,"Register all Variations Editor blocks using WP ",(0,i.kt)("inlineCode",{parentName:"p"},"registerBlockVariation")," method."),(0,i.kt)("h3",{id:"ucfirst"},"ucfirst"),(0,i.kt)("p",null,"Convert the first letter of a string to uppercase."),(0,i.kt)("h1",{id:"general-helpers"},(0,i.kt)("a",{parentName:"h1",href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/helpers"},"General helpers")),(0,i.kt)("p",null,"These are all helpers generally used anywhere."),(0,i.kt)("h3",{id:"camelize"},"camelize"),(0,i.kt)("p",null,"Returns a camelCase-formatted string."),(0,i.kt)("h3",{id:"checkattr"},"checkAttr"),(0,i.kt)("p",null,"Check if attribute exist in attributes list and add default value if not."),(0,i.kt)("h3",{id:"checkattrresponsive"},"checkAttrResponsive"),(0,i.kt)("p",null,"Map and check attributes for responsive object."),(0,i.kt)("h3",{id:"cookies"},"cookies"),(0,i.kt)("p",null,"Helper to set and unset cookies."),(0,i.kt)("h3",{id:"debounce"},"debounce"),(0,i.kt)("p",null,"Debounces the provided function."),(0,i.kt)("h3",{id:"devices"},"devices"),(0,i.kt)("p",null,"Detect a certain device, so specific functionality can be implemented for it."),(0,i.kt)("h3",{id:"dynamicimport"},"dynamicImport"),(0,i.kt)("p",null,"Loop all paths required using require.context method."),(0,i.kt)("h3",{id:"elementchildrenheight"},"elementChildrenHeight"),(0,i.kt)("p",null,"Returns height of the element measured by height of its children."),(0,i.kt)("h3",{id:"escape-string"},"escape-string"),(0,i.kt)("p",null,"Takes the provided string and removes special characters"),(0,i.kt)("h3",{id:"navigator"},"navigator"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator.vibrate()")," method pulses the vibration hardware on the device, if such hardware exists."),(0,i.kt)("h3",{id:"responsiveselectors"},"responsiveSelectors"),(0,i.kt)("p",null,"Create responsive selectors used for responsive attributes."),(0,i.kt)("h3",{id:"selector"},"selector"),(0,i.kt)("p",null,"Returns BEM selector for HTML class and checks if the condition part is set."),(0,i.kt)("h3",{id:"truncatemiddle"},"truncateMiddle"),(0,i.kt)("p",null,"Slices the string and inputs the provided separator after the specified characters."),(0,i.kt)("h1",{id:"plugins-helpers"},(0,i.kt)("a",{parentName:"h1",href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/plugins"},"Plugins helpers")),(0,i.kt)("p",null,"These are all helpers generally only in specific plugins."),(0,i.kt)("h3",{id:"yoastseo"},"yoastSeo"),(0,i.kt)("p",null,'This helper will search all blocks and components manifests and find attributes that have "seo": "true" key.\nThis key will be added in to the content and proceed by the YoastSeo Analysis plugin.'),(0,i.kt)("h1",{id:"storybook-helpers"},(0,i.kt)("a",{parentName:"h1",href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/storybook"},"Storybook helpers")),(0,i.kt)("p",null,"These are all helpers generally only in Storybook."),(0,i.kt)("h3",{id:"blockdetails"},"blockDetails"),(0,i.kt)("p",null,"Combine block details in one object."),(0,i.kt)("h3",{id:"gutenberg"},"Gutenberg"),(0,i.kt)("p",null,"Load actual Block Editor and all the magic."),(0,i.kt)("h3",{id:"storybookdefaultmockscategories"},"storybookDefaultMocksCategories"),(0,i.kt)("p",null,"Manually populate categories for blocks. This is generated in the PHP part of the real project."),(0,i.kt)("h3",{id:"storybookdefaultmockscolorpalette"},"storybookDefaultMocksColorPalette"),(0,i.kt)("p",null,"Manually populate blocks color palette. This is generated in the PHP part of the real project."),(0,i.kt)("h3",{id:"storybookwindowobjects"},"storybookWindowObjects,"),(0,i.kt)("p",null,"Loading WP build files."),(0,i.kt)("h3",{id:"storybookwpstyles"},"storybookWpStyles"),(0,i.kt)("p",null,"Loading styles for block editor."))}k.isMDXComponent=!0}}]);